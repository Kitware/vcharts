{
  "version": 3,
  "sources": [
    "../../../../usr/local/lib/node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "src/index.js",
    "src/libs-browser.js",
    "templates/bar.json",
    "templates/box.json",
    "templates/bullet.json",
    "templates/histogram.json",
    "templates/vega.json",
    "templates/xy.json",
    "templates/xymatrix.json"
  ],
  "names": [],
  "mappings": "AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/QA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrhMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtvc
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "var libs = require('./libs');\n\nvar templates = {\n    bar: require('../templates/bar.json'),\n    box: require('../templates/box.json'),\n    bullet: require('../templates/bullet.json'),\n    histogram: require('../templates/histogram.json'),\n    vega: require('../templates/vega.json'),\n    xy: require('../templates/xy.json'),\n    xymatrix: require('../templates/xymatrix.json')\n};\n\nvar d3 = libs.d3;\nvar vg = libs.vg;\n\nvar getNestedRec = function (spec, parts) {\n    if (spec === undefined || parts.length === 0) {\n        return spec;\n    }\n    return getNestedRec(spec[parts[0]], parts.slice(1));\n};\n\nvar getNested = function (spec, name) {\n    return getNestedRec(spec, name.split('.'));\n};\n\nvar setNestedRec = function (spec, parts, value) {\n    if (parts.length === 1) {\n        spec[parts[0]] = value;\n        return;\n    }\n    if (spec[parts[0]] === undefined) {\n        spec[parts[0]] = {};\n    }\n    setNestedRec(spec[parts[0]], parts.slice(1), value);\n};\n\nvar setNested = function (spec, name, value) {\n    setNestedRec(spec, name.split('.'), value);\n};\n\nvar templateFunctions = {\n    defaults: function (args, options, scope) {\n        var index, value;\n        for (index = 0; index < args[0].length; index += 1) {\n            value = getNested(scope, args[0][index][0]);\n            if (value === undefined) {\n                value = getNested(options, args[0][index][0]);\n            }\n            if (value === undefined) {\n                value = transform(args[0][index][1], options, scope);\n                setNested(scope, args[0][index][0], value);\n            }\n        }\n        return transform(args[1], options, scope);\n    },\n\n    get: function (args, options, scope) {\n        var value;\n        value = getNested(scope, args[0]);\n        if (value === undefined) {\n            value = getNested(options, args[0]);\n        }\n        if (value === undefined) {\n            value = transform(args[1], options, scope);\n        }\n        if (value === undefined) {\n            value = null;\n        }\n        return value;\n    },\n\n    map: function (args, options, scope) {\n        var transformed = [],\n            elements = transform(args[0], options, scope),\n            elementIndex,\n            itemIndex,\n            element;\n\n        for (elementIndex = 0; elementIndex < elements.length; elementIndex += 1) {\n            scope[args[1]] = elements[elementIndex];\n            for (itemIndex = 2; itemIndex < args.length; itemIndex += 1) {\n                element = transform(args[itemIndex], options, scope);\n                if (element !== null) {\n                    transformed.push(element);\n                }\n            }\n        }\n        return transformed;\n    },\n\n    if: function (args, options, scope) {\n        var condition = transform(args[0], options, scope);\n        if (condition) {\n            return transform(args[1], options, scope);\n        }\n        return transform(args[2], options, scope);\n    },\n\n    eq: function (args, options, scope) {\n        var a = transform(args[0], options, scope),\n            b = transform(args[1], options, scope);\n        return (a === b);\n    },\n\n    min: function (args, options, scope) {\n        var array = transform(args[0], options, scope),\n            field = transform(args[1], options, scope);\n        return d3.min(array, function (d) {\n            return getNested(d, field);\n        });\n    },\n\n    max: function (args, options, scope) {\n        var array = transform(args[0], options, scope),\n            field = transform(args[1], options, scope);\n        return d3.max(array, function (d) {\n            return getNested(d, field);\n        });\n    },\n\n    join: function (args, options, scope) {\n        var i, join, arr, result = \"\";\n        sep = transform(args[0], options, scope);\n        arr = transform(args[1], options, scope);\n        for (i = 0; i < arr.length; i += 1) {\n            if (i > 0) {\n                result += sep;\n            }\n            result += arr[i];\n        }\n        return result;\n    }\n};\n\nvar transform = function (spec, options, scope) {\n    var transformed,\n        index,\n        key;\n\n    options = options || {};\n    scope = scope || {};\n\n    if (Array.isArray(spec)) {\n        if (spec.length > 0 && (typeof spec[0] === 'string') && spec[0].slice(0, 1) === '@') {\n            return templateFunctions[spec[0].slice(1)](spec.slice(1), options, scope);\n        }\n        transformed = [];\n        for (index = 0; index < spec.length; index += 1) {\n            transformed.push(transform(spec[index], options, scope));\n        }\n        return transformed;\n    }\n    if (spec === null) {\n        return spec;\n    }\n    if (typeof spec === 'object') {\n        transformed = {};\n        for (key in spec) {\n            if (spec.hasOwnProperty(key)) {\n                transformed[key] = transform(spec[key], options, scope);\n            }\n        }\n        return transformed;\n    }\n    return spec;\n};\n\nvar isObjectLiteral = function (object) {\n    return object && object.constructor && object.constructor.name === 'Object';\n};\n\nvar isArrayLiteral = function (object) {\n    return object && object.constructor && object.constructor.name === 'Array';\n};\n\nvar extend = function (defaults, options) {\n    var extended,\n        prop,\n        index;\n    if (options === undefined) {\n        return defaults;\n    }\n    if (isObjectLiteral(defaults)) {\n        extended = {};\n        for (prop in defaults) {\n            if (Object.prototype.hasOwnProperty.call(defaults, prop)) {\n                extended[prop] = extend(defaults[prop], options[prop]);\n            }\n        }\n        for (prop in options) {\n            if (!Object.prototype.hasOwnProperty.call(defaults, prop)) {\n                extended[prop] = options[prop];\n            }\n        }\n        return extended;\n    }\n    if (isArrayLiteral(defaults)) {\n        extended = [];\n        for (index = 0; index < defaults.length; index += 1) {\n            extended.push(extend(defaults[index], options[index]));\n        }\n        if (isArrayLiteral(options)) {\n            for (index = defaults.length; index < options.length; index += 1) {\n                extended.push(options[index]);\n            }\n        }\n        return extended;\n    }\n    return options;\n};\n\nvar chart = function (type, initialOptions) {\n    var that = {};\n\n    that.options = {};\n    that.template = templates[type];\n\n    that.update = function (newOptions) {\n        var vegaOptions, spec, sizeOptions, curOptions, el;\n\n        that.options = extend(that.options, newOptions);\n\n        // Transform pass 1 to get the padding\n        spec = transform(that.template, that.options);\n\n        // Use padding and element size to set size, unless\n        // size explicitly specified or element size is zero.\n        el = d3.select(that.options.el)[0][0];\n        sizeOptions = {};\n        if (el.offsetWidth !== 0 && el.offsetHeight !== 0) {\n            if (that.options.width === undefined) {\n                sizeOptions.width = el.offsetWidth;\n                if (spec.padding) {\n                    sizeOptions.width -= spec.padding.left + spec.padding.right;\n                }\n            }\n            if (that.options.height === undefined) {\n                sizeOptions.height = el.offsetHeight;\n                if (spec.padding) {\n                    sizeOptions.height -= spec.padding.top + spec.padding.bottom;\n                }\n            }\n        }\n        curOptions = extend(that.options, sizeOptions);\n\n        // Options that go directly to Vega runtime\n        vegaOptions = {\n            el: curOptions.el,\n            renderer: curOptions.renderer\n        };\n\n        // Transform pass 2 to get the final visualization\n        that.spec = transform(that.template, curOptions);\n\n        vg.parse.spec(that.spec, function (chartObj) {\n            var chart = chartObj(vegaOptions);\n            chart.update();\n        });\n    };\n\n    that.update(initialOptions);\n\n    return that;\n};\n\nmodule.exports = {\n    transform: transform,\n    chart: chart,\n    templates: templates\n};\n",
    "module.exports = {\n    d3: d3,\n    vg: vg\n};\n",
    "module.exports=[\n    \"@defaults\",\n    [\n        [\"x\", \"x\"],\n        [\"y\", \"y\"]\n    ],\n    {\n        \"width\": [\"@get\", \"width\", 800],\n        \"height\": [\"@get\", \"height\", 500],\n        \"padding\": [\"@get\", \"padding\", {\"top\": 20, \"bottom\": 50, \"left\": 50, \"right\": 10}],\n        \"predicates\": [\n            {\n                \"name\": \"tooltip\",\n                \"type\": \"==\",\n                \"operands\": [{\"signal\": \"d._id\"}, {\"arg\": \"id\"}]\n            }\n        ],\n        \"data\": [\n            {\n                \"name\": \"series\",\n                \"values\": [\"@get\", \"values\"]\n            }\n        ],\n        \"signals\": [\n            {\n                \"name\": \"d\",\n                \"init\": {},\n                \"streams\": [\n                    {\"type\": \"rect:mouseover\", \"expr\": \"datum\"},\n                    {\"type\": \"rect:mouseout\", \"expr\": \"{}\"}\n                ]\n            }\n        ],\n        \"scales\": [\n            {\n                \"name\": \"x\",\n                \"type\": \"ordinal\",\n                \"range\": \"width\",\n                \"domain\": {\n                    \"data\": \"series\",\n                    \"field\": [\"@get\", \"x\"]\n                }\n            },\n            {\n                \"name\": \"y\",\n                \"type\": [\"@get\", \"yAxis.type\", \"linear\"],\n                \"range\": \"height\",\n                \"zero\": true,\n                \"domain\": {\n                    \"data\": \"series\",\n                    \"field\": [\"@get\", \"y\"]\n                }\n            }\n        ],\n        \"axes\": [\n            {\n                \"type\": \"x\",\n                \"scale\": \"x\",\n                \"layer\": \"back\",\n                \"title\": [\"@get\", \"xAxis.title\", \"\"]\n            },\n            {\n                \"type\": \"y\",\n                \"scale\": \"y\",\n                \"layer\": \"back\",\n                \"title\": [\"@get\", \"yAxis.title\", \"\"]\n            }\n        ],\n        \"marks\": [\n            {\n                \"type\": \"rect\",\n                \"from\": {\"data\": \"series\"},\n                \"properties\": {\n                    \"enter\": {\n                        \"x\": {\"scale\": \"x\", \"field\": [\"@get\", \"x\"], \"offset\": 1},\n                        \"width\": {\"scale\": \"x\", \"band\": true, \"offset\": -1},\n                        \"y\": {\"scale\": \"y\", \"field\": [\"@get\", \"y\"]},\n                        \"y2\": {\"scale\": \"y\", \"value\": 0}\n                    },\n                    \"update\": {\n                        \"fill\": {\"value\": [\"@get\", \"fill\", \"steelblue\"]}\n                    },\n                    \"hover\": {\n                        \"fill\": {\"value\": [\"@get\", \"hover\", \"red\"]}\n                    }\n                }\n            },\n            {\n                \"type\": \"text\",\n                \"properties\": {\n                    \"enter\": {\n                        \"align\": {\"value\": \"center\"},\n                        \"fill\": {\"value\": \"#333\"}\n                    },\n                    \"update\": {\n                        \"x\": {\"scale\": \"x\", \"signal\": [\"@join\", \"\", [\"d['\", [\"@get\", \"x\"] , \"']\"]]},\n                        \"dx\": {\"scale\": \"x\", \"band\": true, \"mult\": 0.5},\n                        \"y\": {\"scale\": \"y\", \"signal\": [\"@join\", \"\", [\"d['\", [\"@get\", \"y\"] , \"']\"]], \"offset\": -5},\n                        \"text\": {\n                            \"template\": [\n                                \"@get\",\n                                \"tooltip\",\n                                [\n                                    \"@join\",\n                                    \"\",\n                                    [\n                                        \"{{d['\",\n                                        [\"@get\", \"x\"],\n                                        \"']}}: {{d['\",\n                                        [\"@get\", \"y\"],\n                                        \"']}}\"\n                                    ]\n                                ]\n                            ]\n                        },\n                        \"fillOpacity\": {\n                            \"rule\": [\n                                {\n                                    \"predicate\": {\n                                        \"name\": \"tooltip\",\n                                        \"id\": {\"value\": null}\n                                    },\n                                    \"value\": 0\n                                },\n                                {\"value\": 1}\n                            ]\n                        }\n                    }\n                }\n            }\n        ]\n    }\n]\n",
    "module.exports=[\n    \"@defaults\",\n    [\n        [\"group\", \"key\"],\n        [\"boxSize\", 0.75],\n        [\"capSize\", 0.5]\n    ],\n    {\n        \"name\": \"boxplot\",\n        \"height\": [\"@get\", \"height\", 400],\n        \"padding\": [\"@get\", \"padding\", {\"left\": 100, \"right\": 10, \"top\": 10, \"bottom\": 50}],\n        \"width\": [\"@get\", \"width\", 600],\n        \"data\": [\n            {\n                \"name\": \"table\",\n                \"values\": [\"@get\", \"values\"],\n                \"transform\": [\n                    {\n                        \"type\": \"fold\",\n                        \"fields\": [\"@get\", \"fields\"]\n                    },\n                    {\n                        \"type\": \"formula\",\n                        \"field\": \"name\",\n                        \"expr\": [\n                            \"@if\",\n                            [\"@eq\", \"key\", [\"@get\", \"group\"]],\n                            \"datum.key\",\n                            [\n                                \"@join\",\n                                \"\",\n                                [\"datum.key + ' ' + datum.\", [\"@get\", \"group\"]]\n                            ]\n                        ]\n                    }\n                ]\n            },\n            {\n                \"name\": \"stats\",\n                \"source\": \"table\",\n                \"transform\": [\n                    {\n                        \"type\": \"aggregate\",\n                        \"groupby\": [\"name\"],\n                        \"summarize\": [\n                            {\n                                \"field\": \"value\",\n                                \"ops\": [\"min\",\"max\", \"median\", \"q1\", \"q3\", \"valid\"]\n                            }\n                        ]\n                    }\n                ]\n            },\n            {\n                \"name\": \"calcs\",\n                \"source\": \"stats\",\n                \"transform\": [\n                    {\"type\": \"formula\", \"field\": \"lower\", \"expr\": \"max(datum.min_value,datum.q1_value-1.5*(datum.q3_value-datum.q1_value))\"},\n                    {\"type\": \"formula\", \"field\": \"upper\", \"expr\": \"min(datum.max_value,datum.q3_value+1.5*(datum.q3_value-datum.q1_value))\"},\n                    {\"type\": \"formula\", \"field\": \"min_value_opacity\", \"expr\": \"if(datum.min_value==datum.lower,0,1)\"},\n                    {\"type\": \"formula\", \"field\": \"max_value_opacity\", \"expr\": \"if(datum.max_value==datum.upper,0,1)\"}\n                ]\n            }\n        ],\n        \"scales\": [\n            {\n                \"name\": \"y\",\n                \"points\": true,\n                \"padding\": 1,\n                \"range\": \"height\",\n                \"domain\": {\"data\": \"table\", \"field\": \"name\", \"sort\": true},\n                \"type\": \"ordinal\",\n                \"round\": true\n            },\n            {\n                \"name\": \"ybar\",\n                \"range\": \"height\",\n                \"domain\": {\"data\": \"table\", \"field\": \"name\", \"sort\": true},\n                \"type\": \"ordinal\",\n                \"round\": true\n            },\n            {\n                \"name\": \"x\",\n                \"nice\": true,\n                \"range\": \"width\",\n                \"domain\": {\"data\": \"table\", \"field\": \"value\"},\n                \"type\": \"linear\",\n                \"round\": true\n            }\n        ],\n        \"axes\": [\n            {\"type\": \"x\", \"scale\": \"x\"},\n            {\"type\": \"y\",\"scale\": \"y\"}\n        ],\n        \"marks\": [\n            {\n                \"type\": \"rect\",\n                \"from\": {\"data\": \"calcs\"},\n                \"properties\": {\n                    \"enter\": {\n                        \"x\": {\"field\": \"lower\", \"scale\": \"x\"},\n                        \"x2\": {\"field\": \"upper\", \"scale\": \"x\"},\n                        \"yc\": {\"field\": \"name\", \"scale\": \"y\"},\n                        \"height\": {\"value\": 1},\n                        \"fill\": {\"value\": \"#888\"}\n                    }\n                }\n            },\n            {\n                \"type\": \"rect\",\n                \"from\": {\"data\": \"calcs\"},\n                \"properties\": {\n                    \"enter\": {\n                        \"x\": {\"scale\": \"x\", \"field\": \"q1_value\"},\n                        \"x2\": {\"scale\": \"x\", \"field\": \"q3_value\"},\n                        \"yc\": {\"scale\": \"y\", \"field\": \"name\"},\n                        \"height\": {\"scale\": \"ybar\", \"band\": true, \"mult\": [\"@get\", \"boxSize\"]},\n                        \"fill\": {\"value\": [\"@get\", \"fill\", \"white\"]},\n                        \"stroke\": {\"value\": \"#888\"}\n                    }\n                }\n            },\n            {\n                \"type\": \"rect\",\n                \"from\": {\"data\": \"calcs\"},\n                \"properties\": {\n                    \"enter\": {\n                        \"x\": {\"scale\": \"x\", \"field\": \"median_value\"},\n                        \"width\": {\"value\": 2},\n                        \"yc\": {\"scale\": \"y\", \"field\": \"name\"},\n                        \"height\": {\"scale\": \"ybar\", \"band\": true, \"mult\": [\"@get\", \"boxSize\"]},\n                        \"fill\": {\"value\": \"#000\"}\n                    }\n                }\n            },\n            {\n                \"type\": \"rect\",\n                \"from\": {\"data\": \"calcs\"},\n                \"properties\": {\n                    \"enter\": {\n                        \"x\": {\"scale\": \"x\", \"field\": \"lower\"},\n                        \"width\": {\"value\": 1},\n                        \"yc\": {\"scale\": \"y\", \"field\": \"name\"},\n                        \"height\": {\"scale\": \"ybar\", \"band\": true, \"mult\": [\"@get\", \"capSize\"]},\n                        \"fill\": {\"value\": \"#000\"}\n                    }\n                }\n            },\n            {\n                \"type\": \"rect\",\n                \"from\": {\"data\": \"calcs\"},\n                \"properties\": {\n                    \"enter\": {\n                        \"x\": {\"scale\": \"x\", \"field\": \"upper\"},\n                        \"width\": {\"value\": 1},\n                        \"yc\": {\"scale\": \"y\", \"field\": \"name\"},\n                        \"height\": {\"scale\": \"ybar\", \"band\": true, \"mult\": [\"@get\", \"capSize\"]},\n                        \"fill\": {\"value\": \"#000\"}\n                    }\n                }\n            },\n            {\n                \"type\": \"symbol\",\n                \"from\": {\"data\": \"calcs\"},\n                \"properties\": {\n                    \"enter\": {\n                        \"x\": {\"scale\": \"x\", \"field\": \"min_value\"},\n                        \"yc\": {\"scale\": \"y\", \"field\": \"name\"},\n                        \"size\": {\"value\": 20},\n                        \"stroke\": {\"value\": \"#000\"},\n                        \"fill\": {\"value\": \"#fff\"},\n                        \"opacity\": {\"field\": \"min_value_opacity\"}\n                    }\n                }\n            },\n            {\n                \"type\": \"symbol\",\n                \"from\": {\"data\": \"calcs\"},\n                \"properties\": {\n                    \"enter\": {\n                        \"x\": {\"scale\": \"x\", \"field\": \"max_value\"},\n                        \"yc\": {\"scale\": \"y\", \"field\": \"name\"},\n                        \"size\": {\"value\": 20},\n                        \"stroke\": {\"value\": \"#000\"},\n                        \"fill\": {\"value\": \"#fff\"},\n                        \"opacity\": {\"field\": \"max_value_opacity\"}\n                    }\n                }\n            }\n        ]\n    }\n]\n",
    "module.exports=[\n    \"@defaults\",\n    [\n        [\"width\", 300],\n        [\"height\", 40],\n        [\n            \"ranges\",\n            [\n                {\"min\": 0, \"max\": 0.1, \"background\": \"hsl(0,0%,90%)\", \"foreground\": \"rgb(102,191,103)\"},\n                {\"min\": 0.1, \"max\": 0.5, \"background\": \"hsl(0,0%,75%)\", \"foreground\": \"rgb(255,179,24)\"},\n                {\"min\": 0.5, \"max\": 1, \"background\": \"hsl(0,0%,60%)\", \"foreground\": \"rgb(228,0,0)\"}\n            ]\n        ]\n    ],\n    {\n        \"width\": [\"@get\", \"width\"],\n        \"height\": [\"@get\", \"height\"],\n        \"padding\": {\n            \"top\": 10,\n            \"left\": [\n                \"@if\",\n                [\"@get\", \"title\", \"\"],\n                150,\n                10\n            ],\n            \"bottom\": 30,\n            \"right\": 10\n        },\n        \"data\": [\n            {\n                \"name\": \"ranges\",\n                \"values\": [\"@get\", \"ranges\"]\n            },\n            {\n                \"name\": \"values\",\n                \"values\": [\n                    {\"value\": [\"@get\", \"value\", 0]}\n                ],\n                \"transform\": [\n                    {\n                        \"type\": \"formula\",\n                        \"field\": \"align\",\n                        \"expr\": \"if(datum.value < 0, 'left', 'right')\"\n                    },\n                    {\n                        \"type\": \"formula\",\n                        \"field\": \"dx\",\n                        \"expr\": \"if(datum.value < 0, 5, -5)\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"markers\",\n                \"values\": [\"@get\", \"markers\", []]\n            }\n        ],\n        \"scales\": [\n            {\n                \"name\": \"x\",\n                \"type\": \"linear\",\n                \"range\": \"width\",\n                \"domain\": {\"data\": \"ranges\", \"field\": [\"min\", \"max\"]}\n            },\n            {\n                \"name\": \"y\",\n                \"type\": \"linear\",\n                \"range\": [0, [\"@get\", \"height\"]],\n                \"domain\": [0, 1]\n            },\n            {\n                \"name\": \"color\",\n                \"type\": \"linear\",\n                \"range\": [\n                    \"@map\",\n                    [\"@get\", \"ranges\"],\n                    \"range\",\n                    [\"@get\", \"range.foreground\", \"black\"],\n                    [\"@get\", \"range.foreground\", \"black\"]\n                ],\n                \"domain\": [\n                    \"@map\",\n                    [\"@get\", \"ranges\"],\n                    \"range\",\n                    [\"@get\", \"range.min\"],\n                    [\"@get\", \"range.max\"]\n                ]\n            }\n        ],\n        \"axes\": [\n            {\n                \"type\": \"x\",\n                \"scale\": \"x\",\n                \"ticks\": 5,\n                \"properties\": {\n                    \"axis\": {\n                        \"stroke\": {\"value\": \"hsl(0,0%,75%)\"},\n                        \"strokeWidth\": {\"value\": 0.5}\n                    },\n                    \"ticks\": {\n                        \"stroke\": {\"value\": \"hsl(0,0%,75%)\"},\n                        \"strokeWidth\": {\"value\": 0.5}\n                    },\n                    \"labels\": {\n                        \"fontSize\": {\"value\": [\"@get\", \"axisFontSize\", 14]}\n                    }\n                }\n            }\n        ],\n        \"marks\": [\n            {\n                \"type\": \"rect\",\n                \"from\": {\"data\": \"ranges\"},\n                \"properties\": {\n                    \"enter\": {\n                        \"x\": {\"scale\": \"x\", \"field\": \"min\"},\n                        \"x2\": {\"scale\": \"x\", \"field\": \"max\"},\n                        \"y\": {\"scale\": \"y\", \"value\": 0},\n                        \"y2\": {\"scale\": \"y\", \"value\": 1},\n                        \"fill\": {\"field\": \"background\"},\n                        \"opacity\": {\"value\": 0.5}\n                    }\n                }\n            },\n            {\n                \"type\": \"rect\",\n                \"from\": {\"data\": \"markers\"},\n                \"properties\": {\n                    \"enter\": {\n                        \"xc\": {\"scale\": \"x\", \"field\": \"value\"},\n                        \"width\": {\"value\": 2},\n                        \"yc\": {\"scale\": \"y\", \"value\": 0.5},\n                        \"height\": {\"scale\": \"y\", \"value\": 0.75},\n                        \"fill\": {\"scale\": \"color\", \"field\": \"value\"}\n                    }\n                }\n            },\n            {\n                \"type\": \"rect\",\n                \"from\": {\"data\": \"values\"},\n                \"properties\": {\n                    \"enter\": {\n                        \"x\": {\"scale\": \"x\", \"value\": 0},\n                        \"x2\": {\"scale\": \"x\", \"field\": \"value\"},\n                        \"yc\": {\"scale\": \"y\", \"value\": 0.5},\n                        \"height\": {\"scale\": \"y\", \"value\": 0.5},\n                        \"fill\": {\"scale\": \"color\", \"field\": \"value\"}\n                    }\n                }\n            },\n            {\n                \"type\": \"text\",\n                \"properties\": {\n                    \"enter\": {\n                        \"x\": {\"value\": -10},\n                        \"y\": {\"scale\": \"y\", \"value\": 0.5},\n                        \"fontSize\": {\"value\": [\"@get\", \"titleFontSize\", 20]},\n                        \"text\": {\"value\": [\"@get\", \"title\", \"\"]},\n                        \"align\": {\"value\": \"right\"},\n                        \"baseline\": {\"value\": \"middle\"},\n                        \"fill\": {\"value\": \"black\"}\n                    }\n                }\n            },\n            {\n                \"type\": \"text\",\n                \"properties\": {\n                    \"enter\": {\n                        \"x\": {\"value\": -10},\n                        \"y\": {\"scale\": \"y\", \"value\": 0.5, \"offset\": 15},\n                        \"fontSize\": {\"value\": [\"@get\", \"subtitleFontSize\", 12]},\n                        \"text\": {\"value\": [\"@get\", \"subtitle\", \"\"]},\n                        \"align\": {\"value\": \"right\"},\n                        \"baseline\": {\"value\": \"middle\"},\n                        \"fill\": {\"value\": \"black\"}\n                    }\n                }\n            },\n            {\n                \"type\": \"text\",\n                \"from\": {\"data\": \"values\"},\n                \"properties\": {\n                    \"enter\": {\n                        \"x\": {\"scale\": \"x\", \"field\": \"value\"},\n                        \"dx\": {\"field\": \"dx\"},\n                        \"y\": {\"scale\": \"y\", \"value\": 0.5},\n                        \"fontSize\": {\"value\": [\"@get\", \"labelFontSize\", 16]},\n                        \"text\": {\"template\": [\n                            \"@get\", \"display\", \"{{datum.value|number:'.2g'}}\"\n                        ]},\n                        \"align\": {\"field\": \"align\"},\n                        \"baseline\": {\"value\": \"middle\"},\n                        \"fill\": {\"value\": \"white\"}\n                    }\n                }\n            }\n        ]\n    }\n]\n",
    "module.exports=[\n    \"@defaults\",\n    [\n        [\"bin\", \"value\"],\n        [\"discrete\", false]\n    ],\n    {\n        \"width\": [\"@get\", \"width\", 800],\n        \"height\": [\"@get\", \"height\", 500],\n        \"padding\": [\"@get\", \"padding\", {\"top\": 20, \"bottom\": 50, \"left\": 50, \"right\": 10}],\n        \"predicates\": [\n            {\n                \"name\": \"tooltip\",\n                \"type\": \"==\",\n                \"operands\": [{\"signal\": \"d._id\"}, {\"arg\": \"id\"}]\n            }\n        ],\n        \"data\": [\n            {\n                \"name\": \"series\",\n                \"values\": [\"@get\", \"values\"],\n                \"transform\": [\n                    \"@if\",\n                    [\"@get\", \"discrete\"],\n                    [\n                        {\n                            \"type\": \"formula\",\n                            \"field\": \"bin\",\n                            \"expr\": [\n                                \"@join\",\n                                \"\",\n                                [\"datum['\", [\"@get\", \"bin\"], \"']\"]\n                            ]\n                        },\n                        {\n                            \"type\": \"aggregate\",\n                            \"groupby\": [\"bin\"],\n                            \"summarize\": [\n                                {\n                                    \"field\": \"*\",\n                                    \"ops\": [\"count\"]\n                                }\n                            ]\n                        }\n                    ],\n                    [\n                        {\n                            \"type\": \"bin\",\n                            \"field\": [\"@get\", \"bin\"],\n                            \"min\": [\n                                \"@min\",\n                                [\"@get\", \"values\"],\n                                [\"@get\", \"bin\"]\n                            ],\n                            \"max\": [\n                                \"@max\",\n                                [\"@get\", \"values\"],\n                                [\"@get\", \"bin\"]\n                            ],\n                            \"maxbins\": [\"@get\", \"maxBins\", 10]\n                        },\n                        {\n                            \"type\": \"aggregate\",\n                            \"groupby\": [\"bin\"],\n                            \"summarize\": [\n                                {\n                                    \"field\": \"*\",\n                                    \"ops\": [\"count\"]\n                                }\n                            ]\n                        }\n                    ]\n                ]\n            }\n        ],\n        \"signals\": [\n            {\n                \"name\": \"d\",\n                \"init\": {},\n                \"streams\": [\n                    {\"type\": \"rect:mouseover\", \"expr\": \"datum\"},\n                    {\"type\": \"rect:mouseout\", \"expr\": \"{}\"}\n                ]\n            }\n        ],\n        \"scales\": [\n            {\n                \"name\": \"x\",\n                \"type\": \"ordinal\",\n                \"range\": \"width\",\n                \"sort\": false,\n                \"domain\": {\n                    \"data\": \"series\",\n                    \"field\": \"bin\",\n                    \"sort\": true\n                }\n            },\n            {\n                \"name\": \"y\",\n                \"type\": \"linear\",\n                \"range\": \"height\",\n                \"zero\": true,\n                \"domain\": {\n                    \"data\": \"series\",\n                    \"field\": \"count\"\n                }\n            }\n        ],\n        \"axes\": [\n            {\n                \"type\": \"x\",\n                \"scale\": \"x\",\n                \"layer\": \"back\",\n                \"title\": [\"@get\", \"xAxis.title\", \"\"],\n                \"properties\": {\n                    \"labels\": {\n                        \"text\": {\n                            \"template\": [\n                                \"@if\",\n                                [\"@get\", \"discrete\", false],\n                                \"{{datum.data}}\",\n                                \"{{datum.data|number:'.2g'}}\"\n                            ]\n                        }\n                    }\n                }\n            },\n            {\n                \"type\": \"y\",\n                \"scale\": \"y\",\n                \"layer\": \"back\",\n                \"title\": [\"@get\", \"yAxis.title\", \"\"]\n            }\n        ],\n        \"marks\": [\n            {\n                \"type\": \"rect\",\n                \"from\": {\"data\": \"series\"},\n                \"properties\": {\n                    \"enter\": {\n                        \"x\": {\"scale\": \"x\", \"field\": \"bin\", \"offset\": 1},\n                        \"width\": {\"scale\": \"x\", \"band\": true, \"offset\": -1},\n                        \"y\": {\"scale\": \"y\", \"field\": \"count\"},\n                        \"y2\": {\"scale\": \"y\", \"value\": 0}\n                    },\n                    \"update\": {\n                        \"fill\": {\"value\": [\"@get\", \"fill\", \"steelblue\"]}\n                    },\n                    \"hover\": {\n                        \"fill\": {\"value\": [\"@get\", \"hover\", \"red\"]}\n                    }\n                }\n            },\n            {\n                \"type\": \"text\",\n                \"properties\": {\n                    \"enter\": {\n                        \"align\": {\"value\": \"center\"},\n                        \"fill\": {\"value\": \"#333\"}\n                    },\n                    \"update\": {\n                        \"x\": {\"scale\": \"x\", \"signal\": \"d.bin\"},\n                        \"dx\": {\"scale\": \"x\", \"band\": true, \"mult\": 0.5},\n                        \"y\": {\"scale\": \"y\", \"signal\": \"d.count\", \"offset\": -5},\n                        \"text\": {\"template\": [\"@get\", \"tooltip\", \"{{d.count}}\"]},\n                        \"fillOpacity\": {\n                            \"rule\": [\n                                {\n                                    \"predicate\": {\n                                        \"name\": \"tooltip\",\n                                        \"id\": {\"value\": null}\n                                    },\n                                    \"value\": 0\n                                },\n                                {\"value\": 1}\n                            ]\n                        }\n                    }\n                }\n            }\n        ]\n    }\n]\n",
    "module.exports=[\"@get\", \"spec\"]\n",
    "module.exports=[\n    \"@defaults\",\n    [\n        [\"width\", 800],\n        [\"height\", 500]\n    ],\n    {\n        \"width\": [\"@get\", \"width\"],\n        \"height\": [\"@get\", \"height\"],\n        \"padding\": [\"@get\", \"padding\", { \"top\": 10, \"bottom\": 50, \"left\": 50, \"right\": 150 }],\n        \"predicates\": [\n            {\n                \"name\": \"tooltip\",\n                \"type\": \"==\",\n                \"operands\": [{\"signal\": \"d._id\"}, {\"arg\": \"id\"}]\n            }\n        ],\n        \"data\": [\n            \"@map\",\n            [\"@get\", \"series\"],\n            \"d\",\n            {\n                \"name\": [\"@get\", \"d.name\"],\n                \"values\": [\"@get\", \"d.values\"],\n                \"transform\": [\n                    {\n                        \"type\": \"formula\",\n                        \"field\": \"x\",\n                        \"expr\": [\n                            \"@join\",\n                            \"\",\n                            [\"datum['\", [\"@get\", \"d.x\", \"x\"], \"']\"]\n                        ]\n                    },\n                    {\n                        \"type\": \"formula\",\n                        \"field\": \"y\",\n                        \"expr\": [\n                            \"@join\",\n                            \"\",\n                            [\"datum['\", [\"@get\", \"d.y\", \"y\"], \"']\"]\n                        ]\n                    }\n                ]\n            }\n        ],\n        \"signals\": [\n            {\n                \"name\": \"width\", \"init\": [\"@get\", \"width\"]\n            },\n            {\n                \"name\": \"height\", \"init\": [\"@get\", \"height\"]\n            },\n            {\n                \"name\": \"d\",\n                \"init\": {},\n                \"streams\": [\n                    { \"type\": \"symbol:mouseover\", \"expr\": \"datum\" },\n                    { \"type\": \"symbol:mouseout\", \"expr\": \"{}\" }\n                ]\n            },\n            {\n                \"name\": \"point\",\n                \"init\": 0,\n                \"streams\": [\n                    {\n                        \"type\": \"mousedown\",\n                        \"expr\": \"{x: eventX(), y: eventY()}\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"delta\",\n                \"init\": 0,\n                \"streams\": [\n                    {\n                        \"type\": \"[mousedown, window:mouseup] > window:mousemove\",\n                        \"expr\": \"{x: point.x - eventX(), y: eventY() - point.y}\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"xAnchor\",\n                \"init\": 0,\n                \"streams\": [\n                    {\n                        \"type\": \"mousemove, wheel\",\n                        \"expr\": \"eventX()\",\n                        \"scale\": { \"name\": \"x\", \"invert\": true }\n                    }\n                ]\n            },\n            {\n                \"name\": \"yAnchor\",\n                \"init\": 0,\n                \"streams\": [\n                    {\n                        \"type\": \"mousemove, wheel\",\n                        \"expr\": \"eventY()\",\n                        \"scale\": {\"name\": \"y\", \"invert\": true}\n                    }\n                ]\n            },\n            {\n                \"name\": \"zoom\",\n                \"init\": 1.0,\n                \"streams\": [\n                    {\n                        \"type\": \"wheel\",\n                        \"expr\": \"pow(1.001, event.deltaY)\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"xMinAnchor\",\n                \"streams\": [\n                    {\n                        \"type\": \"mousedown, mouseup, wheel\",\n                        \"expr\": \"0\",\n                        \"scale\": {\"name\": \"x\", \"invert\": true}\n                    }\n                ]\n            },\n            {\n                \"name\": \"xMaxAnchor\",\n                \"streams\": [\n                    {\n                        \"type\": \"mousedown, mouseup, wheel\",\n                        \"expr\": \"width\",\n                        \"scale\": {\"name\": \"x\", \"invert\": true}\n                    }\n                ]\n            },\n            {\n                \"name\": \"yMinAnchor\",\n                \"streams\": [\n                    {\n                        \"type\": \"mousedown, mouseup, wheel\",\n                        \"expr\": \"height\",\n                        \"scale\": {\"name\": \"y\", \"invert\": true}\n                    }\n                ]\n            },\n            {\n                \"name\": \"yMaxAnchor\",\n                \"streams\": [\n                    {\n                        \"type\": \"mousedown, mouseup, wheel\",\n                        \"expr\": \"0\",\n                        \"scale\": {\"name\": \"y\", \"invert\": true}\n                    }\n                ]\n            },\n            {\n                \"name\": \"xMin\",\n                \"init\": [\"@get\", \"xAxis.range.0\", null],\n                \"streams\": [\n                    {\n                        \"type\": \"delta\",\n                        \"expr\": [\n                            \"@if\",\n                            [\"@get\", \"xAxis.pan\", true],\n                            [\n                                \"@if\",\n                                [\"@eq\", [\"@get\", \"xAxis.type\"], \"time\"],\n                                \"time(xMinAnchor) + (time(xMaxAnchor)-time(xMinAnchor))*delta.x/width\",\n                                \"xMinAnchor + (xMaxAnchor-xMinAnchor)*delta.x/width\"\n                            ],\n                            \"xMinAnchor\"\n                        ]\n                    },\n                    {\n                        \"type\": \"zoom\",\n                        \"expr\": [\n                            \"@if\",\n                            [\"@get\", \"xAxis.zoom\", true],\n                            [\n                                \"@if\",\n                                [\"@eq\", [\"@get\", \"xAxis.type\"], \"time\"],\n                                \"(time(xMinAnchor)-time(xAnchor))*zoom + time(xAnchor)\",\n                                \"(xMinAnchor-xAnchor)*zoom + xAnchor\"\n                            ],\n                            \"xMinAnchor\"\n                        ]\n                    }\n                ]\n            },\n            {\n                \"name\": \"xMax\",\n                \"init\": [\"@get\", \"xAxis.range.1\", null],\n                \"streams\": [\n                    {\n                        \"type\": \"delta\",\n                        \"expr\": [\n                            \"@if\",\n                            [\"@get\", \"xAxis.pan\", true],\n                            [\n                                \"@if\",\n                                [\"@eq\", [\"@get\", \"xAxis.type\"], \"time\"],\n                                \"time(xMaxAnchor) + (time(xMaxAnchor)-time(xMinAnchor))*delta.x/width\",\n                                \"xMaxAnchor + (xMaxAnchor-xMinAnchor)*delta.x/width\"\n                            ],\n                            \"xMaxAnchor\"\n                        ]\n                    },\n                    {\n                        \"type\": \"zoom\",\n                        \"expr\": [\n                            \"@if\",\n                            [\"@get\", \"xAxis.zoom\", true],\n                            [\n                                \"@if\",\n                                [\"@eq\", [\"@get\", \"xAxis.type\"], \"time\"],\n                                \"(time(xMaxAnchor)-time(xAnchor))*zoom + time(xAnchor)\",\n                                \"(xMaxAnchor-xAnchor)*zoom + xAnchor\"\n                            ],\n                            \"xMaxAnchor\"\n                        ]\n                    }\n                ]\n            },\n            {\n                \"name\": \"yMin\",\n                \"init\": [\"@get\", \"yAxis.range.0\", null],\n                \"streams\": [\n                    {\n                        \"type\": \"delta\",\n                        \"expr\": [\n                            \"@if\",\n                            [\"@get\", \"yAxis.pan\", true],\n                            \"yMinAnchor + (yMaxAnchor-yMinAnchor)*delta.y/height\",\n                            \"yMinAnchor\"\n                        ]\n                    },\n                    {\n                        \"type\": \"zoom\",\n                        \"expr\": [\n                            \"@if\",\n                            [\"@get\", \"yAxis.zoom\", true],\n                            [\n                                \"@if\",\n                                [\"@eq\", [\"@get\", \"yAxis.type\"], \"time\"],\n                                \"(yMinAnchor-time(yAnchor))*zoom + time(yAnchor)\",\n                                \"(yMinAnchor-yAnchor)*zoom + yAnchor\"\n                            ],\n                            \"yMinAnchor\"\n                        ]\n                    }\n                ]\n            },\n            {\n                \"name\": \"yMax\",\n                \"init\": [\"@get\", \"yAxis.range.1\", null],\n                \"streams\": [\n                    {\n                        \"type\": \"delta\",\n                        \"expr\": [\n                            \"@if\",\n                            [\"@get\", \"yAxis.pan\", true],\n                            \"yMaxAnchor + (yMaxAnchor-yMinAnchor)*delta.y/height\",\n                            \"yMaxAnchor\"\n                        ]\n                    },\n                    {\n                        \"type\": \"zoom\",\n                        \"expr\": [\n                            \"@if\",\n                            [\"@get\", \"yAxis.zoom\", true],\n                            [\n                                \"@if\",\n                                [\"@eq\", [\"@get\", \"yAxis.type\"], \"time\"],\n                                \"(yMaxAnchor-time(yAnchor))*zoom + time(yAnchor)\",\n                                \"(yMaxAnchor-yAnchor)*zoom + yAnchor\"\n                            ],\n                            \"yMaxAnchor\"\n                        ]\n                    }\n                ]\n            }\n        ],\n        \"scales\": [\n            {\n                \"name\": \"x\",\n                \"type\": [\"@get\", \"xAxis.type\", \"linear\"],\n                \"range\": \"width\",\n                \"zero\": false,\n                \"domain\": {\n                    \"fields\": [\n                        \"@map\",\n                        [\"@get\", \"series\"],\n                        \"s\",\n                        {\n                            \"data\": [\"@get\", \"s.name\"],\n                            \"field\": \"x\"\n                        }\n                    ]\n                },\n                \"domainMin\": {\"signal\": \"xMin\"},\n                \"domainMax\": {\"signal\": \"xMax\"}\n            },\n            {\n                \"name\": \"y\",\n                \"type\": [\"@get\", \"yAxis.type\", \"linear\"],\n                \"range\": \"height\",\n                \"zero\": false,\n                \"domain\": {\n                    \"fields\": [\n                        \"@map\",\n                        [\"@get\", \"series\"],\n                        \"s\",\n                        {\n                            \"data\": [\"@get\", \"s.name\"],\n                            \"field\": \"y\"\n                        }\n                    ]\n                },\n                \"domainMin\": {\"signal\": \"yMin\"},\n                \"domainMax\": {\"signal\": \"yMax\"}\n            },\n            {\n                \"name\": \"color\",\n                \"type\": \"ordinal\",\n                \"domain\": [\n                    \"@map\",\n                    [\"@get\", \"series\"],\n                    \"d\",\n                    [\"@get\", \"d.name\"]\n                ],\n                \"range\": [\n                    \"@map\",\n                    [\"@get\", \"series\"],\n                    \"d\",\n                    [\"@get\", \"d.color\", \"steelblue\"]\n                ]\n            }\n        ],\n        \"axes\": [\n            {\n                \"type\": \"x\",\n                \"scale\": \"x\",\n                \"grid\": true,\n                \"layer\": \"back\",\n                \"title\": [\"@get\", \"xAxis.title\", \"\"]\n            },\n            {\n                \"type\": \"y\",\n                \"scale\": \"y\",\n                \"grid\": true,\n                \"layer\": \"back\",\n                \"title\": [\"@get\", \"yAxis.title\", \"\"]\n            }\n        ],\n        \"legends\": [\n            {\n                \"fill\": \"color\",\n                \"orient\": \"right\",\n                \"properties\": {\n                    \"symbols\": {\n                        \"stroke\": { \"value\": \"transparent\" }\n                    }\n                }\n            }\n        ],\n        \"marks\": [\n            {\n                \"type\": \"group\",\n                \"properties\": {\n                    \"enter\": {\n                        \"x\": { \"value\": 0 },\n                        \"width\": { \"field\": {\"group\": \"width\" } },\n                        \"y\": { \"value\": 0 },\n                        \"height\": { \"field\": { \"group\": \"height\" } },\n                        \"clip\": { \"value\": true }\n                    }\n                },\n                \"marks\": [\n                    {\n                        \"type\": \"group\",\n                        \"marks\": [\n                            \"@map\",\n                            [\"@get\", \"series\"],\n                            \"d\",\n                            [\n                                \"@if\",\n                                [\"@get\", \"d.line\", false],\n                                {\n                                    \"type\": \"line\",\n                                    \"from\": {\"data\": [\"@get\", \"d.name\"]},\n                                    \"properties\": {\n                                        \"update\": {\n                                            \"x\": {\"scale\": \"x\", \"field\": \"x\"},\n                                            \"y\": {\"scale\": \"y\", \"field\": \"y\"},\n                                            \"stroke\": {\"scale\": \"color\", \"value\": [\"@get\", \"d.name\"]},\n                                            \"strokeWidth\": [\"@get\", \"d.lineWidth\", 1]\n                                        }\n                                    }\n                                },\n                                null\n                            ]\n                        ]\n                    },\n                    {\n                        \"type\": \"group\",\n                        \"marks\": [\n                            \"@map\",\n                            [\"@get\", \"series\"],\n                            \"d\",\n                            [\n                                \"@if\",\n                                [\"@get\", \"d.point\", true],\n                                {\n                                    \"type\": \"symbol\",\n                                    \"from\": {\"data\": [\"@get\", \"d.name\"]},\n                                    \"properties\": {\n                                        \"update\": {\n                                            \"x\": {\"scale\": \"x\", \"field\": \"x\"},\n                                            \"y\": {\"scale\": \"y\", \"field\": \"y\"},\n                                            \"fill\": {\"scale\": \"color\", \"value\": [\"@get\", \"d.name\"]},\n                                            \"stroke\": {\"value\": \"#444\"},\n                                            \"shape\": {\"value\": [\"@get\", \"d.shape\", \"circle\"]},\n                                            \"strokeWidth\": {\"value\": [\"@get\", \"d.strokeWidth\", 0.25]},\n                                            \"size\": {\"value\": [\"@get\", \"d.pointSize\", 20]}\n                                        },\n                                        \"hover\": {\n                                            \"size\": {\"value\": 80}\n                                        }\n                                    }\n                                },\n                                null\n                            ]\n                        ]\n                    },\n                    {\n                        \"type\": \"text\",\n                        \"properties\": {\n                            \"enter\": {\n                                \"align\": {\"value\": \"center\"},\n                                \"fill\": {\"value\": \"#333\"}\n                            },\n                            \"update\": {\n                                \"x\": {\"scale\": \"x\", \"signal\": \"d.x\"},\n                                \"y\": {\"scale\": \"y\", \"signal\": \"d.y\", \"offset\": -10},\n                                \"text\": {\"template\": [\"@get\", \"tooltip\", \"({{d.x|number:'.4g'}}, {{d.y|number:'.4g'}})\"]},\n                                \"fillOpacity\": {\n                                    \"rule\": [\n                                        {\n                                            \"predicate\": {\n                                                \"name\": \"tooltip\",\n                                                \"id\": {\"value\": null}\n                                            },\n                                            \"value\": 0\n                                        },\n                                        {\"value\": 1}\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                ]\n            }\n        ]\n    }\n]\n",
    "module.exports=[\n    \"@defaults\",\n    [\n        [\"color.value\", \"steelblue\"],\n        [\"color.type\", \"ordinal\"]\n    ],\n    {\n        \"width\": [\"@get\", \"width\", 600],\n        \"height\": [\"@get\", \"height\", 600],\n        \"padding\": [\n            \"@get\",\n            \"padding\",\n            {\n                \"top\": 30,\n                \"bottom\": 10,\n                \"left\": 100,\n                \"right\": [\"@if\", [\"@get\", \"color.field\"], 100, 0]\n            }\n        ],\n        \"data\": [\n            {\n                \"name\": \"data\",\n                \"values\": [\"@get\", \"values\"]\n            },\n            {\n                \"name\": \"fields\",\n                \"values\": [\"@get\", \"fields\"]\n            }\n        ],\n        \"scales\": [\n            {\n                \"name\": \"gx\",\n                \"type\": \"ordinal\",\n                \"range\": \"width\",\n                \"round\": true,\n                \"domain\": {\"data\": \"fields\", \"field\": \"data\"}\n            },\n            {\n                \"name\": \"gy\",\n                \"type\": \"ordinal\",\n                \"range\": \"height\",\n                \"round\": true,\n                \"reverse\": true,\n                \"domain\": {\"data\": \"fields\", \"field\": \"data\"}\n            },\n            {\n                \"name\": \"c\",\n                \"type\": [\"@get\", \"color.type\"],\n                \"domain\": {\"data\": \"data\", \"field\": [\"@get\", \"color.field\"]},\n                \"zero\": false,\n                \"range\": [\n                    \"@if\", [\"@eq\", [\"@get\", \"color.type\"], \"ordinal\"],\n                    \"category10\",\n                    [\"yellow\", \"blue\"]\n                ]\n            }\n        ],\n        \"legends\": [\n            \"@if\",\n            [\"@get\", \"color.field\"],\n            [\n                {\n                    \"fill\": \"c\",\n                    \"title\": [\"@get\", \"color.field\"],\n                    \"offset\": 10,\n                    \"properties\": {\n                        \"symbols\": {\n                            \"fillOpacity\": {\"value\": 0.5},\n                            \"stroke\": {\"value\": \"transparent\"}\n                        }\n                    }\n                }\n            ],\n            []\n        ],\n        \"marks\": [\n            {\n                \"type\": \"group\",\n                \"from\": {\n                    \"data\": \"fields\",\n                    \"transform\": [{\"type\": \"cross\"}]\n                },\n                \"properties\": {\n                    \"enter\": {\n                        \"x\": {\"scale\": \"gx\", \"field\": \"a.data\"},\n                        \"y\": {\"scale\": \"gy\", \"field\": \"b.data\"},\n                        \"width\": {\"scale\": \"gx\", \"band\": true, \"offset\":-35},\n                        \"height\": {\"scale\": \"gy\", \"band\": true, \"offset\":-35},\n                        \"fill\": {\"value\": \"#fff\"},\n                        \"stroke\": {\"value\": \"#ddd\"}\n                    }\n                },\n                \"scales\": [\n                    {\n                        \"name\": \"x\",\n                        \"range\": \"width\",\n                        \"zero\": false,\n                        \"round\": true,\n                        \"domain\": {\"data\": \"data\", \"field\": {\"parent\": \"a.data\"}}\n                    },\n                    {\n                        \"name\": \"y\",\n                        \"range\": \"height\",\n                        \"zero\": false,\n                        \"round\": true,\n                        \"domain\": {\"data\": \"data\", \"field\": {\"parent\": \"b.data\"}}\n                    }\n                ],\n                \"axes\": [\n                    {\"type\": \"x\", \"scale\": \"x\", \"ticks\": 5},\n                    {\"type\": \"y\", \"scale\": \"y\", \"ticks\": 5}\n                ],\n                \"marks\": [\n                    {\n                        \"type\": \"symbol\",\n                        \"from\": {\"data\": \"data\"},\n                        \"properties\": {\n                            \"enter\": {\n                                \"x\": {\"scale\": \"x\", \"field\": {\"datum\": {\"parent\": \"a.data\"}}},\n                                \"y\": {\"scale\": \"y\", \"field\": {\"datum\": {\"parent\": \"b.data\"}}},\n                                \"fill\": [\n                                    \"@if\",\n                                    [\"@get\", \"color.field\"],\n                                    {\"scale\": \"c\", \"field\": [\"@get\", \"color.field\"]},\n                                    {\"value\": [\"@get\", \"color.value\"]}\n                                ],\n                                \"fillOpacity\": {\"value\": 0.5}\n                            },\n                            \"update\": {\n                                \"size\": {\"value\": 36},\n                                \"stroke\": {\"value\": \"transparent\"}\n                            },\n                            \"hover\": {\n                                \"size\": {\"value\": 100},\n                                \"stroke\": {\"value\": \"white\"}\n                            }\n                        }\n                    }\n                ]\n            },\n            {\n                \"type\": \"text\",\n                \"from\": {\"data\": \"fields\"},\n                \"properties\": {\n                    \"enter\": {\n                        \"x\": {\"value\": -30},\n                        \"y\": {\"scale\": \"gy\", \"field\": \"data\"},\n                        \"text\": {\"field\": \"data\"},\n                        \"fontSize\": {\"value\": 12},\n                        \"fill\": {\"value\": \"black\"},\n                        \"align\": {\"value\": \"right\"},\n                        \"baseline\": {\"value\": \"top\"},\n                        \"fontWeight\": {\"value\": \"bold\"}\n                    }\n                }\n            },\n            {\n                \"type\": \"text\",\n                \"from\": {\"data\": \"fields\"},\n                \"properties\": {\n                    \"enter\": {\n                        \"y\": {\"value\": -10},\n                        \"x\": {\"scale\": \"gx\", \"field\": \"data\"},\n                        \"text\": {\"field\": \"data\"},\n                        \"fontSize\": {\"value\": 12},\n                        \"fill\": {\"value\": \"black\"},\n                        \"align\": {\"value\": \"left\"},\n                        \"baseline\": {\"value\": \"bottom\"},\n                        \"fontWeight\": {\"value\": \"bold\"}\n                    }\n                }\n            }\n        ]\n    }\n]\n"
  ]
}